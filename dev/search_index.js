var documenterSearchIndex = {"docs":
[{"location":"reference/#Reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"Modules = [Swizzles]","category":"page"},{"location":"reference/#Swizzles.construct_swizzle","page":"Reference","title":"Swizzles.construct_swizzle","text":"construct_swizzle(T, args)\n\nWrap the result of a swizzling operation into T(args...).\n\nThis method may be extended for your own types, e.g. if a different constructor must be used.\n\nSee also: swizzle\n\n\n\n\n\n","category":"function"},{"location":"reference/#Swizzles.swizzle","page":"Reference","title":"Swizzles.swizzle","text":"swizzle(v, indices...)\nswizzle(T, v, indices...)\n\nCreate a new object made up of v[i₁], v[i₂], ... where indices = (i₁, i₂, ...). If a type is provided as first argument, the result will be wrapped into it via construct_swizzle.\n\nA default type is derived from swizzle(v, indices...), where a single index infers T = eltype(v), and multiple indices infer T = typeof(v). For statically sized vectors (StaticVector and SizedVector), an extension extends StaticArraysCore vectors such that one of correct size is used to hold the result.\n\nSee also: swizzle!\n\n\n\n\n\n","category":"function"},{"location":"reference/#Swizzles.swizzle!-Tuple{Any, Any, Any, Vararg{Any}}","page":"Reference","title":"Swizzles.swizzle!","text":"swizzle!(v, value, indices...)\n\nMutate v at indices such that v[i₁] = value[1], v[i₂] = value[2], ... where indices = (i₁, i₂, ...). and return value.\n\nIf any indices are duplicated in indices, v will be consecutively overwritten at the corresponding index, retaining the last value per the semantics of setindex!.\n\n\n\n\n\n","category":"method"},{"location":"reference/#Swizzles.@swizzle","page":"Reference","title":"Swizzles.@swizzle","text":"@swizzle v.xyz\n@swizzle v.rgb\n@swizzle T v.xyz\n@swizzle v.xyz = [1, 2, 3]\n@swizzle v.rgb = v.bgr\n\nPerform a swizzling operation, extracting components or, if an assignment is provided, mutating them.\n\nThis macro translates a .<field1><field2>...<fieldn> syntax such as .xwyz into an appropriate call to swizzle (non-mutating) or swizzle! (mutating).\n\nIf the operation is non-mutating, an additional type argument T may be provided to put the result of the extraction into a specific type (see the documentation for swizzle for more details).\n\nEach letter on the right-hand side of . is considered as a separate component name, and is by default mapped to:\n\nx or r -> first component\ny or g -> second component\nz or b -> third component\nw or a -> fourth component\n\nusing nomenclature from geometry processing ([x, y, z, w] representing spatial coordinates) and computer graphics ([r, g, b, a] representing color vectors).\n\nThis mapping may be customized from Julia 1.11 onwards (see extended help).\n\nExtended help\n\nFrom Julia 1.11 onwards, scoped values allow the customization of this component mapping, via @with Swizzles.component_names => Dict(...). For example, if you wanted to consider width, height and depth as first, second and third components, you may do\n\nnew_names = Dict('w' => 1, 'h' => 2, 'd' => 3)\n# You might also have done `@with Swizzles.component_names => new_names`\n# to discard existing names.\n@with Swizzles.component_names => merge(Swizzles.component_names, new_names) do\n  @swizzle dims.w\n  @swizzle dims.whd\nend\n\nFor convenience, you could even define your own @swizzle macro shadowing the one exported by this package as\n\nusing Swizzles\n\nmacro _swizzle(ex)\n  new_names = Dict('w' => 1, 'h' => 2, 'd' => 3)\n  ex = quote\n    @with Swizzles.component_names => merge(Swizzles.component_names[], $new_names) do\n      Swizzles.@swizzle $ex\n    end\n  end\n  esc(ex)\nend\n\nWhether or not this is a good idea is for you to decide.\n\n\n\n\n\n","category":"macro"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Swizzles","category":"page"},{"location":"#Swizzles","page":"Home","title":"Swizzles","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Swizzles.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
